" vi: syntax=vim, filetype=vim

" use neco-ghc with YCM
let g:ycm_semantic_triggers = {'haskell' : ['.']}
"let g:ycm_path_to_python_interpreter = '/usr/bin/python'
let g:ycm_key_list_select_completion = ['<TAB>', '<Down>', '<Enter']
au FileType haskell setlocal omnifunc=necoghc#omnifunc

" let vroom use vimux for running test
let g:vroom_use_vimux = 1

" disable rooter automatically mapping to \cd
let g:rooter_disable_map = 1

" use 'ripper-tags' (if available) to generate ruby ctags with tagbar
if executable('ripper-tags')
    " Configure Tagbar to user ripper-tags with ruby
    let g:tagbar_type_ruby = {
                \ 'kinds' : [
                    \ 'm:modules',
                    \ 'c:classes',
                    \ 'f:methods',
                    \ 'F:singleton methods',
                    \ 'C:constants',
                    \ 'a:aliases'
                \ ],
                \ 'ctagsbin':  'ripper-tags',
                \ 'ctagsargs': ['-f', '-']
                \ }
endif
let g:tagbar_autoclose=1
let g:tagbar_autofocus=1
let g:tagbar_sort = 0

let g:ctrlp_match_window_bottom = 0
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_custom_ignore = '\v\~$|\.(o|swp|pyc|wav|mp3|ogg|blend|hi|ho)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|__init__\.py|node_modules|(.*/out/./*)|(.*/compiled/.*)|(.*/target/.*)'
let g:ctrlp_working_path_mode = "r"
let g:ctrlp_dotfiles = 0
let g:ctrlp_switch_buffer = 0

let g:rainbow_active = 1
let g:rainbow_conf = {
      \   'ctermfgs': ['13', '5', '1', '9', '3', '2', '6', '4'],
      \   'operators': '_,_',
      \   'parentheses': [['(',')'], ['\[','\]'], ['{','}']],
      \   'separately': {
      \       'html': {
      \           'parentheses': [['(',')'], ['\[','\]'], ['{','}'], ['<\a[^>]*[^/]>\|<\a>','</[^>]*>']],
      \       },
      \       'tex': {
      \           'operators': '',
      \           'parentheses': [['(',')'], ['\[','\]']],
      \       },
      \   }
      \}

let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:miniBufExplorerAutoStart = 0

let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
let g:indent_guides_auto_colors=0
hi IndentGuidesOdd  ctermbg=24
hi IndentGuidesEven ctermbg=25

au FileType vim let b:delimitMate_autoclose = 0
au FileType clojure let b:delimitMate_quotes = '"'

" Autoclose complete window
autocmd CompleteDone * pclose

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

let maplocalleader=","
