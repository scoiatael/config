set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'

Plugin 'vim-scripts/SearchComplete'
Plugin 'kien/ctrlp.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'scrooloose/nerdtree'
Plugin 'luochen1990/rainbow'
Plugin 'ervandew/supertab'
Plugin 'scrooloose/syntastic'
Plugin 'edkolev/tmuxline.vim'
Plugin 'bling/vim-airline'
Plugin 'kchmck/vim-coffee-script'
Plugin 'altercation/vim-colors-solarized'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-haml'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'techlivezheng/vim-plugin-minibufexpl'
Plugin 'vim-ruby/vim-ruby'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'Raimondi/delimitMate'
Plugin 'ap/vim-css-color'
Plugin 'eagletmt/ghcmod-vim'
Plugin 'kana/vim-filetype-haskell'
Plugin 'eagletmt/neco-ghc'
Plugin 'chrisbra/unicode.vim'
Plugin 'tpope/vim-surround'
Plugin 'majutsushi/tagbar'
Plugin 'airblade/vim-gitgutter'
Plugin 'mileszs/ack.vim'
Plugin 'scrooloose/nerdcommenter'
call vundle#end()
filetype plugin indent on

set nu
set nocompatible      " We're running Vim, not Vi!
syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection

cmap w!! w !sudo tee > /dev/null %

set tabstop=2
set shiftwidth=2
set expandtab

set tags=./.tags
nmap \g :TagbarToggle<CR>
" use 'ripper-tags' (if available) to generate ruby ctags with tagbar
if executable('ripper-tags')
    " Configure Tagbar to user ripper-tags with ruby
    let g:tagbar_type_ruby = {
                \ 'kinds' : [
                    \ 'm:modules',
                    \ 'c:classes',
                    \ 'f:methods',
                    \ 'F:singleton methods',
                    \ 'C:constants',
                    \ 'a:aliases'
                \ ],
                \ 'ctagsbin':  'ripper-tags',
                \ 'ctagsargs': ['-f', '-']
                \ }
endif
let g:tagbar_autoclose=1
let g:tagbar_autofocus=1
autocmd VimEnter * nested :call tagbar#autoopen(1)
let g:tagbar_sort = 0

nmap <F2> :%!astyle --mode=cs --style=stroustrup -p -s2<cr>
:nnoremap \w :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

:nmap \o :set paste!<CR>
:nmap j gj
:nmap k gk
:map <C-a>  <Home>
:map <C-e>  <End>
:nmap \h  :MBEbp<CR>
:nmap \l  :MBEbn<CR>
:map <C-b>  <PageUp>
:map <C-f>  <PageDown>
:map \p <C-p>
:map \f :set foldenable!<CR>
:map \F za

:cnoremap <C-d>  <Delete>
:cnoremap <M-b>  <S-Left>
:cnoremap <M-f>  <S-Right>
:cnoremap <M-d>  <S-right><Delete>
:cnoremap <Esc>b <S-Left>
:cnoremap <Esc>f <S-Right>
:cnoremap <Esc>d <S-right><Delete>
:cnoremap <C-g>  <C-c>

:set incsearch
:set ignorecase
:set smartcase
:set hlsearch
:nmap \q :nohlsearch<CR>

:set foldmethod=syntax
:set foldlevel=2

let g:UltiSnipsExpandTrigger="\\<Tab>"
let g:UltiSnipsJumpForwardTrigger="\\<Tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-Tab>"


:nmap ; :CtrlP<CR>

:let g:ctrlp_map = '<Leader>t'
:let g:ctrlp_match_window_bottom = 0
:let g:ctrlp_match_window_reversed = 0
:let g:ctrlp_custom_ignore = '\v\~$|\.(o|swp|pyc|wav|mp3|ogg|blend|hi|ho)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|__init__\.py|node_modules'
:let g:ctrlp_working_path_mode = "r"
:let g:ctrlp_dotfiles = 0
:let g:ctrlp_switch_buffer = 0

:let g:rainbow_active = 1
:let g:rainbow_conf = {
      \   'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick', 'darkorchid3'],
      \   'ctermfgs': ['142', '26', '199', '122', '196', '46'],
      \   'operators': '_,_',
      \   'parentheses': [['(',')'], ['\[','\]'], ['{','}']],
      \   'separately': {
      \       'html': {
      \           'parentheses': [['(',')'], ['\[','\]'], ['{','}'], ['<\a[^>]*[^/]>\|<\a>','</[^>]*>']],
      \       },
      \       'tex': {
      \           'operators': '',
      \           'parentheses': [['(',')'], ['\[','\]']],
      \       },
      \   }
      \}

:nmap \e :NERDTreeToggle<CR>
:nmap \a :bnext<CR>
:nmap \s :bprev<CR>
:nmap \d :bd<CR>

:nmap \t :set expandtab tabstop=4 shiftwidth=4 softtabstop=4<CR>
:nmap \T :set expandtab tabstop=8 shiftwidth=8 softtabstop=4<CR>
:nmap \M :set noexpandtab tabstop=8 softtabstop=4 shiftwidth=4<CR>
:nmap \m :set expandtab tabstop=2 shiftwidth=2 softtabstop=2<CR>

if has("syntax")
  syntax on
endif

set t_Co=256
set background=dark
color solarized

if has("autocmd")
  filetype plugin indent on
endif

set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set mouse=a		" Enable mouse usage (all modes)
set ttyfast
set ttymouse=xterm2

let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
set laststatus=2
let g:miniBufExplorerAutoStart = 0

let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
let g:indent_guides_auto_colors=0
hi IndentGuidesOdd  ctermbg=24
hi IndentGuidesEven ctermbg=25

let g:ycm_register_as_syntastic_checker = 0

if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif
